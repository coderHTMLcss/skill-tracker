/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/skills": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all skills for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description List of skills */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Skill"][];
          };
        };
        401: components["responses"]["UnauthorizedError"];
      };
    };
    put?: never;
    /** Create a new skill */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            level?: number;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Skill created successfully */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Skill"];
          };
        };
        401: components["responses"]["UnauthorizedError"];
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/skills/{skillId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get a skill by ID */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          skillId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Skill details */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Skill"];
          };
        };
        401: components["responses"]["UnauthorizedError"];
        404: components["responses"]["NotFoundError"];
      };
    };
    /** Update a skill */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          skillId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            name?: string;
            level?: number;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Skill updated */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Skill"];
          };
        };
        401: components["responses"]["UnauthorizedError"];
        404: components["responses"]["NotFoundError"];
      };
    };
    post?: never;
    /** Delete a skill */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          skillId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Skill deleted successfully */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        401: components["responses"]["UnauthorizedError"];
        404: components["responses"]["NotFoundError"];
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Skill: {
      id: string;
      name: string;
      level?: number;
      description?: string;
    };
  };
  responses: {
    /** @description Unauthorized */
    UnauthorizedError: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        "application/json": {
          /** @example Unauthorized access */
          message?: string;
        };
      };
    };
    /** @description Not Found */
    NotFoundError: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        "application/json": {
          /** @example Resource not found */
          message?: string;
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
